
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `UserDevice` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model UserDevice
 * 
 */
export type UserDeviceModel = runtime.Types.Result.DefaultSelection<Prisma.$UserDevicePayload>

export type AggregateUserDevice = {
  _count: UserDeviceCountAggregateOutputType | null
  _avg: UserDeviceAvgAggregateOutputType | null
  _sum: UserDeviceSumAggregateOutputType | null
  _min: UserDeviceMinAggregateOutputType | null
  _max: UserDeviceMaxAggregateOutputType | null
}

export type UserDeviceAvgAggregateOutputType = {
  id: number | null
  user_id: number | null
}

export type UserDeviceSumAggregateOutputType = {
  id: number | null
  user_id: number | null
}

export type UserDeviceMinAggregateOutputType = {
  id: number | null
  user_id: number | null
  refresh_token_hash: string | null
  ip_address: string | null
  user_agent: string | null
  login_time: Date | null
  is_revoked: boolean | null
  expires_at: Date | null
}

export type UserDeviceMaxAggregateOutputType = {
  id: number | null
  user_id: number | null
  refresh_token_hash: string | null
  ip_address: string | null
  user_agent: string | null
  login_time: Date | null
  is_revoked: boolean | null
  expires_at: Date | null
}

export type UserDeviceCountAggregateOutputType = {
  id: number
  user_id: number
  refresh_token_hash: number
  ip_address: number
  user_agent: number
  login_time: number
  is_revoked: number
  expires_at: number
  _all: number
}


export type UserDeviceAvgAggregateInputType = {
  id?: true
  user_id?: true
}

export type UserDeviceSumAggregateInputType = {
  id?: true
  user_id?: true
}

export type UserDeviceMinAggregateInputType = {
  id?: true
  user_id?: true
  refresh_token_hash?: true
  ip_address?: true
  user_agent?: true
  login_time?: true
  is_revoked?: true
  expires_at?: true
}

export type UserDeviceMaxAggregateInputType = {
  id?: true
  user_id?: true
  refresh_token_hash?: true
  ip_address?: true
  user_agent?: true
  login_time?: true
  is_revoked?: true
  expires_at?: true
}

export type UserDeviceCountAggregateInputType = {
  id?: true
  user_id?: true
  refresh_token_hash?: true
  ip_address?: true
  user_agent?: true
  login_time?: true
  is_revoked?: true
  expires_at?: true
  _all?: true
}

export type UserDeviceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which UserDevice to aggregate.
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserDevices to fetch.
   */
  orderBy?: Prisma.UserDeviceOrderByWithRelationInput | Prisma.UserDeviceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserDeviceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserDevices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserDevices.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned UserDevices
  **/
  _count?: true | UserDeviceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserDeviceAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserDeviceSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserDeviceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserDeviceMaxAggregateInputType
}

export type GetUserDeviceAggregateType<T extends UserDeviceAggregateArgs> = {
      [P in keyof T & keyof AggregateUserDevice]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUserDevice[P]>
    : Prisma.GetScalarType<T[P], AggregateUserDevice[P]>
}




export type UserDeviceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserDeviceWhereInput
  orderBy?: Prisma.UserDeviceOrderByWithAggregationInput | Prisma.UserDeviceOrderByWithAggregationInput[]
  by: Prisma.UserDeviceScalarFieldEnum[] | Prisma.UserDeviceScalarFieldEnum
  having?: Prisma.UserDeviceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserDeviceCountAggregateInputType | true
  _avg?: UserDeviceAvgAggregateInputType
  _sum?: UserDeviceSumAggregateInputType
  _min?: UserDeviceMinAggregateInputType
  _max?: UserDeviceMaxAggregateInputType
}

export type UserDeviceGroupByOutputType = {
  id: number
  user_id: number
  refresh_token_hash: string
  ip_address: string | null
  user_agent: string | null
  login_time: Date
  is_revoked: boolean
  expires_at: Date
  _count: UserDeviceCountAggregateOutputType | null
  _avg: UserDeviceAvgAggregateOutputType | null
  _sum: UserDeviceSumAggregateOutputType | null
  _min: UserDeviceMinAggregateOutputType | null
  _max: UserDeviceMaxAggregateOutputType | null
}

type GetUserDeviceGroupByPayload<T extends UserDeviceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserDeviceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserDeviceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserDeviceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserDeviceGroupByOutputType[P]>
      }
    >
  >



export type UserDeviceWhereInput = {
  AND?: Prisma.UserDeviceWhereInput | Prisma.UserDeviceWhereInput[]
  OR?: Prisma.UserDeviceWhereInput[]
  NOT?: Prisma.UserDeviceWhereInput | Prisma.UserDeviceWhereInput[]
  id?: Prisma.IntFilter<"UserDevice"> | number
  user_id?: Prisma.IntFilter<"UserDevice"> | number
  refresh_token_hash?: Prisma.StringFilter<"UserDevice"> | string
  ip_address?: Prisma.StringNullableFilter<"UserDevice"> | string | null
  user_agent?: Prisma.StringNullableFilter<"UserDevice"> | string | null
  login_time?: Prisma.DateTimeFilter<"UserDevice"> | Date | string
  is_revoked?: Prisma.BoolFilter<"UserDevice"> | boolean
  expires_at?: Prisma.DateTimeFilter<"UserDevice"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type UserDeviceOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  refresh_token_hash?: Prisma.SortOrder
  ip_address?: Prisma.SortOrderInput | Prisma.SortOrder
  user_agent?: Prisma.SortOrderInput | Prisma.SortOrder
  login_time?: Prisma.SortOrder
  is_revoked?: Prisma.SortOrder
  expires_at?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type UserDeviceWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.UserDeviceWhereInput | Prisma.UserDeviceWhereInput[]
  OR?: Prisma.UserDeviceWhereInput[]
  NOT?: Prisma.UserDeviceWhereInput | Prisma.UserDeviceWhereInput[]
  user_id?: Prisma.IntFilter<"UserDevice"> | number
  refresh_token_hash?: Prisma.StringFilter<"UserDevice"> | string
  ip_address?: Prisma.StringNullableFilter<"UserDevice"> | string | null
  user_agent?: Prisma.StringNullableFilter<"UserDevice"> | string | null
  login_time?: Prisma.DateTimeFilter<"UserDevice"> | Date | string
  is_revoked?: Prisma.BoolFilter<"UserDevice"> | boolean
  expires_at?: Prisma.DateTimeFilter<"UserDevice"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type UserDeviceOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  refresh_token_hash?: Prisma.SortOrder
  ip_address?: Prisma.SortOrderInput | Prisma.SortOrder
  user_agent?: Prisma.SortOrderInput | Prisma.SortOrder
  login_time?: Prisma.SortOrder
  is_revoked?: Prisma.SortOrder
  expires_at?: Prisma.SortOrder
  _count?: Prisma.UserDeviceCountOrderByAggregateInput
  _avg?: Prisma.UserDeviceAvgOrderByAggregateInput
  _max?: Prisma.UserDeviceMaxOrderByAggregateInput
  _min?: Prisma.UserDeviceMinOrderByAggregateInput
  _sum?: Prisma.UserDeviceSumOrderByAggregateInput
}

export type UserDeviceScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserDeviceScalarWhereWithAggregatesInput | Prisma.UserDeviceScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserDeviceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserDeviceScalarWhereWithAggregatesInput | Prisma.UserDeviceScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"UserDevice"> | number
  user_id?: Prisma.IntWithAggregatesFilter<"UserDevice"> | number
  refresh_token_hash?: Prisma.StringWithAggregatesFilter<"UserDevice"> | string
  ip_address?: Prisma.StringNullableWithAggregatesFilter<"UserDevice"> | string | null
  user_agent?: Prisma.StringNullableWithAggregatesFilter<"UserDevice"> | string | null
  login_time?: Prisma.DateTimeWithAggregatesFilter<"UserDevice"> | Date | string
  is_revoked?: Prisma.BoolWithAggregatesFilter<"UserDevice"> | boolean
  expires_at?: Prisma.DateTimeWithAggregatesFilter<"UserDevice"> | Date | string
}

export type UserDeviceCreateInput = {
  refresh_token_hash: string
  ip_address?: string | null
  user_agent?: string | null
  login_time?: Date | string
  is_revoked?: boolean
  expires_at: Date | string
  user: Prisma.UserCreateNestedOneWithoutDevicesInput
}

export type UserDeviceUncheckedCreateInput = {
  id?: number
  user_id: number
  refresh_token_hash: string
  ip_address?: string | null
  user_agent?: string | null
  login_time?: Date | string
  is_revoked?: boolean
  expires_at: Date | string
}

export type UserDeviceUpdateInput = {
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutDevicesNestedInput
}

export type UserDeviceUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserDeviceCreateManyInput = {
  id?: number
  user_id: number
  refresh_token_hash: string
  ip_address?: string | null
  user_agent?: string | null
  login_time?: Date | string
  is_revoked?: boolean
  expires_at: Date | string
}

export type UserDeviceUpdateManyMutationInput = {
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserDeviceUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserDeviceListRelationFilter = {
  every?: Prisma.UserDeviceWhereInput
  some?: Prisma.UserDeviceWhereInput
  none?: Prisma.UserDeviceWhereInput
}

export type UserDeviceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type UserDeviceCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  refresh_token_hash?: Prisma.SortOrder
  ip_address?: Prisma.SortOrder
  user_agent?: Prisma.SortOrder
  login_time?: Prisma.SortOrder
  is_revoked?: Prisma.SortOrder
  expires_at?: Prisma.SortOrder
}

export type UserDeviceAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type UserDeviceMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  refresh_token_hash?: Prisma.SortOrder
  ip_address?: Prisma.SortOrder
  user_agent?: Prisma.SortOrder
  login_time?: Prisma.SortOrder
  is_revoked?: Prisma.SortOrder
  expires_at?: Prisma.SortOrder
}

export type UserDeviceMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  refresh_token_hash?: Prisma.SortOrder
  ip_address?: Prisma.SortOrder
  user_agent?: Prisma.SortOrder
  login_time?: Prisma.SortOrder
  is_revoked?: Prisma.SortOrder
  expires_at?: Prisma.SortOrder
}

export type UserDeviceSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type UserDeviceCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.UserDeviceCreateWithoutUserInput, Prisma.UserDeviceUncheckedCreateWithoutUserInput> | Prisma.UserDeviceCreateWithoutUserInput[] | Prisma.UserDeviceUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserDeviceCreateOrConnectWithoutUserInput | Prisma.UserDeviceCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.UserDeviceCreateManyUserInputEnvelope
  connect?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
}

export type UserDeviceUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.UserDeviceCreateWithoutUserInput, Prisma.UserDeviceUncheckedCreateWithoutUserInput> | Prisma.UserDeviceCreateWithoutUserInput[] | Prisma.UserDeviceUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserDeviceCreateOrConnectWithoutUserInput | Prisma.UserDeviceCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.UserDeviceCreateManyUserInputEnvelope
  connect?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
}

export type UserDeviceUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.UserDeviceCreateWithoutUserInput, Prisma.UserDeviceUncheckedCreateWithoutUserInput> | Prisma.UserDeviceCreateWithoutUserInput[] | Prisma.UserDeviceUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserDeviceCreateOrConnectWithoutUserInput | Prisma.UserDeviceCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.UserDeviceUpsertWithWhereUniqueWithoutUserInput | Prisma.UserDeviceUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.UserDeviceCreateManyUserInputEnvelope
  set?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  disconnect?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  delete?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  connect?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  update?: Prisma.UserDeviceUpdateWithWhereUniqueWithoutUserInput | Prisma.UserDeviceUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.UserDeviceUpdateManyWithWhereWithoutUserInput | Prisma.UserDeviceUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.UserDeviceScalarWhereInput | Prisma.UserDeviceScalarWhereInput[]
}

export type UserDeviceUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.UserDeviceCreateWithoutUserInput, Prisma.UserDeviceUncheckedCreateWithoutUserInput> | Prisma.UserDeviceCreateWithoutUserInput[] | Prisma.UserDeviceUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.UserDeviceCreateOrConnectWithoutUserInput | Prisma.UserDeviceCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.UserDeviceUpsertWithWhereUniqueWithoutUserInput | Prisma.UserDeviceUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.UserDeviceCreateManyUserInputEnvelope
  set?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  disconnect?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  delete?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  connect?: Prisma.UserDeviceWhereUniqueInput | Prisma.UserDeviceWhereUniqueInput[]
  update?: Prisma.UserDeviceUpdateWithWhereUniqueWithoutUserInput | Prisma.UserDeviceUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.UserDeviceUpdateManyWithWhereWithoutUserInput | Prisma.UserDeviceUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.UserDeviceScalarWhereInput | Prisma.UserDeviceScalarWhereInput[]
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type UserDeviceCreateWithoutUserInput = {
  refresh_token_hash: string
  ip_address?: string | null
  user_agent?: string | null
  login_time?: Date | string
  is_revoked?: boolean
  expires_at: Date | string
}

export type UserDeviceUncheckedCreateWithoutUserInput = {
  id?: number
  refresh_token_hash: string
  ip_address?: string | null
  user_agent?: string | null
  login_time?: Date | string
  is_revoked?: boolean
  expires_at: Date | string
}

export type UserDeviceCreateOrConnectWithoutUserInput = {
  where: Prisma.UserDeviceWhereUniqueInput
  create: Prisma.XOR<Prisma.UserDeviceCreateWithoutUserInput, Prisma.UserDeviceUncheckedCreateWithoutUserInput>
}

export type UserDeviceCreateManyUserInputEnvelope = {
  data: Prisma.UserDeviceCreateManyUserInput | Prisma.UserDeviceCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type UserDeviceUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.UserDeviceWhereUniqueInput
  update: Prisma.XOR<Prisma.UserDeviceUpdateWithoutUserInput, Prisma.UserDeviceUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.UserDeviceCreateWithoutUserInput, Prisma.UserDeviceUncheckedCreateWithoutUserInput>
}

export type UserDeviceUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.UserDeviceWhereUniqueInput
  data: Prisma.XOR<Prisma.UserDeviceUpdateWithoutUserInput, Prisma.UserDeviceUncheckedUpdateWithoutUserInput>
}

export type UserDeviceUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.UserDeviceScalarWhereInput
  data: Prisma.XOR<Prisma.UserDeviceUpdateManyMutationInput, Prisma.UserDeviceUncheckedUpdateManyWithoutUserInput>
}

export type UserDeviceScalarWhereInput = {
  AND?: Prisma.UserDeviceScalarWhereInput | Prisma.UserDeviceScalarWhereInput[]
  OR?: Prisma.UserDeviceScalarWhereInput[]
  NOT?: Prisma.UserDeviceScalarWhereInput | Prisma.UserDeviceScalarWhereInput[]
  id?: Prisma.IntFilter<"UserDevice"> | number
  user_id?: Prisma.IntFilter<"UserDevice"> | number
  refresh_token_hash?: Prisma.StringFilter<"UserDevice"> | string
  ip_address?: Prisma.StringNullableFilter<"UserDevice"> | string | null
  user_agent?: Prisma.StringNullableFilter<"UserDevice"> | string | null
  login_time?: Prisma.DateTimeFilter<"UserDevice"> | Date | string
  is_revoked?: Prisma.BoolFilter<"UserDevice"> | boolean
  expires_at?: Prisma.DateTimeFilter<"UserDevice"> | Date | string
}

export type UserDeviceCreateManyUserInput = {
  id?: number
  refresh_token_hash: string
  ip_address?: string | null
  user_agent?: string | null
  login_time?: Date | string
  is_revoked?: boolean
  expires_at: Date | string
}

export type UserDeviceUpdateWithoutUserInput = {
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserDeviceUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserDeviceUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  refresh_token_hash?: Prisma.StringFieldUpdateOperationsInput | string
  ip_address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_agent?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  login_time?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  is_revoked?: Prisma.BoolFieldUpdateOperationsInput | boolean
  expires_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type UserDeviceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  refresh_token_hash?: boolean
  ip_address?: boolean
  user_agent?: boolean
  login_time?: boolean
  is_revoked?: boolean
  expires_at?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["userDevice"]>

export type UserDeviceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  refresh_token_hash?: boolean
  ip_address?: boolean
  user_agent?: boolean
  login_time?: boolean
  is_revoked?: boolean
  expires_at?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["userDevice"]>

export type UserDeviceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  refresh_token_hash?: boolean
  ip_address?: boolean
  user_agent?: boolean
  login_time?: boolean
  is_revoked?: boolean
  expires_at?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["userDevice"]>

export type UserDeviceSelectScalar = {
  id?: boolean
  user_id?: boolean
  refresh_token_hash?: boolean
  ip_address?: boolean
  user_agent?: boolean
  login_time?: boolean
  is_revoked?: boolean
  expires_at?: boolean
}

export type UserDeviceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_id" | "refresh_token_hash" | "ip_address" | "user_agent" | "login_time" | "is_revoked" | "expires_at", ExtArgs["result"]["userDevice"]>
export type UserDeviceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type UserDeviceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type UserDeviceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $UserDevicePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "UserDevice"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    user_id: number
    refresh_token_hash: string
    ip_address: string | null
    user_agent: string | null
    login_time: Date
    is_revoked: boolean
    expires_at: Date
  }, ExtArgs["result"]["userDevice"]>
  composites: {}
}

export type UserDeviceGetPayload<S extends boolean | null | undefined | UserDeviceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserDevicePayload, S>

export type UserDeviceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserDeviceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserDeviceCountAggregateInputType | true
  }

export interface UserDeviceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserDevice'], meta: { name: 'UserDevice' } }
  /**
   * Find zero or one UserDevice that matches the filter.
   * @param {UserDeviceFindUniqueArgs} args - Arguments to find a UserDevice
   * @example
   * // Get one UserDevice
   * const userDevice = await prisma.userDevice.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserDeviceFindUniqueArgs>(args: Prisma.SelectSubset<T, UserDeviceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one UserDevice that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserDeviceFindUniqueOrThrowArgs} args - Arguments to find a UserDevice
   * @example
   * // Get one UserDevice
   * const userDevice = await prisma.userDevice.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserDeviceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserDeviceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first UserDevice that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceFindFirstArgs} args - Arguments to find a UserDevice
   * @example
   * // Get one UserDevice
   * const userDevice = await prisma.userDevice.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserDeviceFindFirstArgs>(args?: Prisma.SelectSubset<T, UserDeviceFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first UserDevice that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceFindFirstOrThrowArgs} args - Arguments to find a UserDevice
   * @example
   * // Get one UserDevice
   * const userDevice = await prisma.userDevice.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserDeviceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserDeviceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more UserDevices that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all UserDevices
   * const userDevices = await prisma.userDevice.findMany()
   * 
   * // Get first 10 UserDevices
   * const userDevices = await prisma.userDevice.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userDeviceWithIdOnly = await prisma.userDevice.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserDeviceFindManyArgs>(args?: Prisma.SelectSubset<T, UserDeviceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a UserDevice.
   * @param {UserDeviceCreateArgs} args - Arguments to create a UserDevice.
   * @example
   * // Create one UserDevice
   * const UserDevice = await prisma.userDevice.create({
   *   data: {
   *     // ... data to create a UserDevice
   *   }
   * })
   * 
   */
  create<T extends UserDeviceCreateArgs>(args: Prisma.SelectSubset<T, UserDeviceCreateArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many UserDevices.
   * @param {UserDeviceCreateManyArgs} args - Arguments to create many UserDevices.
   * @example
   * // Create many UserDevices
   * const userDevice = await prisma.userDevice.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserDeviceCreateManyArgs>(args?: Prisma.SelectSubset<T, UserDeviceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many UserDevices and returns the data saved in the database.
   * @param {UserDeviceCreateManyAndReturnArgs} args - Arguments to create many UserDevices.
   * @example
   * // Create many UserDevices
   * const userDevice = await prisma.userDevice.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many UserDevices and only return the `id`
   * const userDeviceWithIdOnly = await prisma.userDevice.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserDeviceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserDeviceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a UserDevice.
   * @param {UserDeviceDeleteArgs} args - Arguments to delete one UserDevice.
   * @example
   * // Delete one UserDevice
   * const UserDevice = await prisma.userDevice.delete({
   *   where: {
   *     // ... filter to delete one UserDevice
   *   }
   * })
   * 
   */
  delete<T extends UserDeviceDeleteArgs>(args: Prisma.SelectSubset<T, UserDeviceDeleteArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one UserDevice.
   * @param {UserDeviceUpdateArgs} args - Arguments to update one UserDevice.
   * @example
   * // Update one UserDevice
   * const userDevice = await prisma.userDevice.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserDeviceUpdateArgs>(args: Prisma.SelectSubset<T, UserDeviceUpdateArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more UserDevices.
   * @param {UserDeviceDeleteManyArgs} args - Arguments to filter UserDevices to delete.
   * @example
   * // Delete a few UserDevices
   * const { count } = await prisma.userDevice.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeviceDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeviceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UserDevices.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many UserDevices
   * const userDevice = await prisma.userDevice.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserDeviceUpdateManyArgs>(args: Prisma.SelectSubset<T, UserDeviceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more UserDevices and returns the data updated in the database.
   * @param {UserDeviceUpdateManyAndReturnArgs} args - Arguments to update many UserDevices.
   * @example
   * // Update many UserDevices
   * const userDevice = await prisma.userDevice.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more UserDevices and only return the `id`
   * const userDeviceWithIdOnly = await prisma.userDevice.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserDeviceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserDeviceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one UserDevice.
   * @param {UserDeviceUpsertArgs} args - Arguments to update or create a UserDevice.
   * @example
   * // Update or create a UserDevice
   * const userDevice = await prisma.userDevice.upsert({
   *   create: {
   *     // ... data to create a UserDevice
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the UserDevice we want to update
   *   }
   * })
   */
  upsert<T extends UserDeviceUpsertArgs>(args: Prisma.SelectSubset<T, UserDeviceUpsertArgs<ExtArgs>>): Prisma.Prisma__UserDeviceClient<runtime.Types.Result.GetResult<Prisma.$UserDevicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of UserDevices.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceCountArgs} args - Arguments to filter UserDevices to count.
   * @example
   * // Count the number of UserDevices
   * const count = await prisma.userDevice.count({
   *   where: {
   *     // ... the filter for the UserDevices we want to count
   *   }
   * })
  **/
  count<T extends UserDeviceCountArgs>(
    args?: Prisma.Subset<T, UserDeviceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserDeviceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a UserDevice.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserDeviceAggregateArgs>(args: Prisma.Subset<T, UserDeviceAggregateArgs>): Prisma.PrismaPromise<GetUserDeviceAggregateType<T>>

  /**
   * Group by UserDevice.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserDeviceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserDeviceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserDeviceGroupByArgs['orderBy'] }
      : { orderBy?: UserDeviceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserDeviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserDeviceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the UserDevice model
 */
readonly fields: UserDeviceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for UserDevice.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserDeviceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the UserDevice model
 */
export interface UserDeviceFieldRefs {
  readonly id: Prisma.FieldRef<"UserDevice", 'Int'>
  readonly user_id: Prisma.FieldRef<"UserDevice", 'Int'>
  readonly refresh_token_hash: Prisma.FieldRef<"UserDevice", 'String'>
  readonly ip_address: Prisma.FieldRef<"UserDevice", 'String'>
  readonly user_agent: Prisma.FieldRef<"UserDevice", 'String'>
  readonly login_time: Prisma.FieldRef<"UserDevice", 'DateTime'>
  readonly is_revoked: Prisma.FieldRef<"UserDevice", 'Boolean'>
  readonly expires_at: Prisma.FieldRef<"UserDevice", 'DateTime'>
}
    

// Custom InputTypes
/**
 * UserDevice findUnique
 */
export type UserDeviceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * Filter, which UserDevice to fetch.
   */
  where: Prisma.UserDeviceWhereUniqueInput
}

/**
 * UserDevice findUniqueOrThrow
 */
export type UserDeviceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * Filter, which UserDevice to fetch.
   */
  where: Prisma.UserDeviceWhereUniqueInput
}

/**
 * UserDevice findFirst
 */
export type UserDeviceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * Filter, which UserDevice to fetch.
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserDevices to fetch.
   */
  orderBy?: Prisma.UserDeviceOrderByWithRelationInput | Prisma.UserDeviceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for UserDevices.
   */
  cursor?: Prisma.UserDeviceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserDevices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserDevices.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of UserDevices.
   */
  distinct?: Prisma.UserDeviceScalarFieldEnum | Prisma.UserDeviceScalarFieldEnum[]
}

/**
 * UserDevice findFirstOrThrow
 */
export type UserDeviceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * Filter, which UserDevice to fetch.
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserDevices to fetch.
   */
  orderBy?: Prisma.UserDeviceOrderByWithRelationInput | Prisma.UserDeviceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for UserDevices.
   */
  cursor?: Prisma.UserDeviceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserDevices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserDevices.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of UserDevices.
   */
  distinct?: Prisma.UserDeviceScalarFieldEnum | Prisma.UserDeviceScalarFieldEnum[]
}

/**
 * UserDevice findMany
 */
export type UserDeviceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * Filter, which UserDevices to fetch.
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of UserDevices to fetch.
   */
  orderBy?: Prisma.UserDeviceOrderByWithRelationInput | Prisma.UserDeviceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing UserDevices.
   */
  cursor?: Prisma.UserDeviceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` UserDevices from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` UserDevices.
   */
  skip?: number
  distinct?: Prisma.UserDeviceScalarFieldEnum | Prisma.UserDeviceScalarFieldEnum[]
}

/**
 * UserDevice create
 */
export type UserDeviceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * The data needed to create a UserDevice.
   */
  data: Prisma.XOR<Prisma.UserDeviceCreateInput, Prisma.UserDeviceUncheckedCreateInput>
}

/**
 * UserDevice createMany
 */
export type UserDeviceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many UserDevices.
   */
  data: Prisma.UserDeviceCreateManyInput | Prisma.UserDeviceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * UserDevice createManyAndReturn
 */
export type UserDeviceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * The data used to create many UserDevices.
   */
  data: Prisma.UserDeviceCreateManyInput | Prisma.UserDeviceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * UserDevice update
 */
export type UserDeviceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * The data needed to update a UserDevice.
   */
  data: Prisma.XOR<Prisma.UserDeviceUpdateInput, Prisma.UserDeviceUncheckedUpdateInput>
  /**
   * Choose, which UserDevice to update.
   */
  where: Prisma.UserDeviceWhereUniqueInput
}

/**
 * UserDevice updateMany
 */
export type UserDeviceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update UserDevices.
   */
  data: Prisma.XOR<Prisma.UserDeviceUpdateManyMutationInput, Prisma.UserDeviceUncheckedUpdateManyInput>
  /**
   * Filter which UserDevices to update
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * Limit how many UserDevices to update.
   */
  limit?: number
}

/**
 * UserDevice updateManyAndReturn
 */
export type UserDeviceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * The data used to update UserDevices.
   */
  data: Prisma.XOR<Prisma.UserDeviceUpdateManyMutationInput, Prisma.UserDeviceUncheckedUpdateManyInput>
  /**
   * Filter which UserDevices to update
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * Limit how many UserDevices to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * UserDevice upsert
 */
export type UserDeviceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * The filter to search for the UserDevice to update in case it exists.
   */
  where: Prisma.UserDeviceWhereUniqueInput
  /**
   * In case the UserDevice found by the `where` argument doesn't exist, create a new UserDevice with this data.
   */
  create: Prisma.XOR<Prisma.UserDeviceCreateInput, Prisma.UserDeviceUncheckedCreateInput>
  /**
   * In case the UserDevice was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserDeviceUpdateInput, Prisma.UserDeviceUncheckedUpdateInput>
}

/**
 * UserDevice delete
 */
export type UserDeviceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
  /**
   * Filter which UserDevice to delete.
   */
  where: Prisma.UserDeviceWhereUniqueInput
}

/**
 * UserDevice deleteMany
 */
export type UserDeviceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which UserDevices to delete
   */
  where?: Prisma.UserDeviceWhereInput
  /**
   * Limit how many UserDevices to delete.
   */
  limit?: number
}

/**
 * UserDevice without action
 */
export type UserDeviceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserDevice
   */
  select?: Prisma.UserDeviceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the UserDevice
   */
  omit?: Prisma.UserDeviceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserDeviceInclude<ExtArgs> | null
}
